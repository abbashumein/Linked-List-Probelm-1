class Node:
    def __init__(self, value):
        self.value = value
        self.next = None


class LinkedList:
    def __init__(self):
        self.head = None


    def append(self, value):
        new_node = Node(value)
        if not self.head:
            self.head = new_node
            return
        current = self.head
        while current.next:
            current = current.next
        current.next = new_node


    def print_list(self):
        current = self.head
        while current:
            print(current.value, end=" -> ")
            current = current.next
        print("NULL")


    def reverse(self):
        prev = None
        current = self.head
        while current:
            next_node = current.next  # Save the next node
            current.next = prev  # Reverse the current node's pointer
            prev = current  # Move prev to the current node
            current = next_node  # Move current to the next node
        self.head = prev  # Update the head to the new first node


linked_list = LinkedList()
for value in [1, 2, 3, 4, 5]:
    linked_list.append(value)


print("Original Linked List:")
linked_list.print_list()

linked_list.reverse()

print("Reversed Linked List:")
linked_list.print_list()
